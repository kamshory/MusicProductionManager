$(document).ready(function (e) {
  const url = new URL(document.location.toString());
  const searchParams = url.searchParams;
  let params = {};
  searchParams.forEach((value, key) => {
    params[key] = value;
  });

  let orderby = searchParams.get("orderby");
  let ordertype = searchParams.get("ordertype");

  $("table thead .col-sort").each(function (e1) {
    let th = $(this);
    let text = th.text().trim();
    let col = th.attr("data-name");
    let linkUrl = createSortUrl(url, col, params);
    let a = $("<a />");
    a.text(text);
    a.attr("href", linkUrl);
    th.empty().append(a);
  });

  // Admin Panel settings

  //****************************
  /* This is for the mini-sidebar if width is less then 1170*/
  //****************************
  var setsidebartype = function () {
    var width = window.innerWidth > 0 ? window.innerWidth : this.screen.width;
    if (width < 1199) {
      $("#main-wrapper").attr("data-sidebartype", "mini-sidebar");
      $("#main-wrapper").addClass("mini-sidebar");
    } else {
      $("#main-wrapper").attr("data-sidebartype", "full");
      $("#main-wrapper").removeClass("mini-sidebar");
    }
  };
  $(window).ready(setsidebartype);
  $(window).on("resize", setsidebartype);
  //****************************
  /* This is for sidebartoggler*/
  //****************************
  $(".sidebartoggler").on("click", function () {
    $("#main-wrapper").toggleClass("mini-sidebar");
    if ($("#main-wrapper").hasClass("mini-sidebar")) {
      $(".sidebartoggler").prop("checked", !0);
      $("#main-wrapper").attr("data-sidebartype", "mini-sidebar");
    } else {
      $(".sidebartoggler").prop("checked", !1);
      $("#main-wrapper").attr("data-sidebartype", "full");
    }
  });
  $(".sidebartoggler").on("click", function () {
    $("#main-wrapper").toggleClass("show-sidebar");
  });
});

function createSortUrl(url, col, params1) {
  let params = JSON.parse(JSON.stringify(params1));
  let path = url.pathname; // '/search'

  if (typeof params["orderby"] != "undefined" && col == params["orderby"]) {
    params["orderby"] = col;
    if (params["ordertype"] == "asc") {
      params["ordertype"] = "desc";
    } else {
      params["ordertype"] = "asc";
    }
  } else {
    params["orderby"] = col;
    params["ordertype"] = "asc";
  }
  let p = [];
  for (const key in params) {
    if (params.hasOwnProperty(key)) {
      p.push(encodeURIComponent(key) + "=" + encodeURIComponent(params[key]));
    }
  }
  return path + "?" + p.join("&");
}
function getFormData(dataSet) {
  let ret = {};
  for (let i = 0; i < dataSet.length; i++) {
    ret[dataSet[i].name] = dataSet[i].value;
  }
  return ret;
}
